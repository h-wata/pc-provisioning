#----
function parse_git_branch {
    git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ [\1]/'
}
function promps {
    local  BLUE="\[\e[1;34m\]"
    local  RED="\[\e[1;31m\]"
    local  GREEN="\[\e[1;32m\]"
    local  YELLOW="\[\e[1;33m\]"
    local  WHITE="\[\e[00m\]"
    local  GRAY="\[\e[1;37m\]"

    case $TERM in
        xterm*) TITLEBAR='\[\e]0;\W\007\]';;
        *)      TITLEBAR="";;
    esac
    local BASE="\u@\h"
    PS1="${TITLEBAR}${GREEN}${BASE}${WHITE}:${BLUE}\w${RED}\$(parse_git_branch)${BLUE}\$${WHITE} \n"
}
promps
#----

source /opt/ros/kinetic/setup.bash
export DISPLAY=:0.0
source ~/ros/devel/setup.bash
export LIBGL_ALWAYS_SOFTWARE=1
export ROBOT_SERIAL_NO=Gazebo
export ROS_MASTER_URI=http://localhost:11311
export PATH="$PATH:`yarn global bin`"
export PATH="/home/gisen/.cargo/bin:$PATH"
# export PATH="/usr/local/cuda/bin:$PATH"
# export LD_LIBRARY_PATH="/usr/local/cuda/lib64:$LD_LIBRARY_PATH"
export PATH="/usr/local/cuda-9.0/bin:$PATH"
export LD_LIBRARY_PATH="/usr/local/cuda-9.0/lib64:$LD_LIBRARY_PATH"
# export PATH="/usr/local/cuda-10.2/bin:$PATH"
# export LD_LIBRARY_PATH="/usr/local/cuda-10.2/lib64:$LD_LIBRARY_PATH"
alias nautilus='nautilus --no-desktop'
# export TERM=xterm-256color

[ -f ~/.fzf.bash ] && source ~/.fzf.bash
export FZF_DEFAULT_OPTS='--height 40% --reverse --border'
export FZF_CTRL_T_COMMAND='fd -t f --hidden --follow -d 5 -E .git'
export FZF_CTRL_T_OPTS='--preview "bat  --color=always --style=header,grid --line-range :100 {}"'
function ghpl {
    gh pr list| fzf --prompt "pr preview>" --preview "echo {} | awk '{print \$1}' | xargs gh pr view" | xargs gh pr view
}
function ghil {
    gh issue list| fzf --prompt "issue preview>" --preview "echo {} | awk '{print \$1}' | xargs gh issue view" | xargs gh issue view
}
alias nas_mount='sudo mount.cifs //robotics-nas.local/Public ~/shares/NAS -o rw,username=admin'
if [ $SHLVL = 1 ]; then
    tmux -2
fi
ide()
{
    tmux split-window -v -p 30
    tmux split-window -h -p 66
    tmux split-window -h -p 50
}
export USE_CCACHE=1
export CCACHE_DIR=~/.ccache
export CC="ccache gcc"
export CXX="ccache g++"
source `catkin locate --shell-verbs`
